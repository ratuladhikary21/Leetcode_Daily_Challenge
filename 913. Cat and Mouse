java

class Solution {
    public void heapify(int[] arr, int N, int i){

        int largest = i;
        int l = 2 * i + 1;
        int r = 2 * i + 2;
        if (l < N && arr[l] > arr[largest])
            largest = l;
        if (r < N && arr[r] > arr[largest])
            largest = r;
        if (largest != i) {
            int temp = arr[i];
            arr[i] = arr[largest];
            arr[largest] = temp;
            heapify(arr, N, largest);
        }
    }
  

    public void heapSort(int[] arr, int N){

        for (int i = N / 2 - 1; i >= 0; i--)
            heapify(arr, N, i);    
        for (int i = N - 1; i > 0; i--) {
            int temp = arr[0];
            arr[0] = arr[i];
            arr[i] = temp;
            heapify(arr, i, 0);
        }
    }


    public int[] sortArray(int[] nums) {

        heapSort(nums,nums.length);
        return nums;
    }
}
